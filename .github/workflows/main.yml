name: Read Issue Body

on:
  issues:
    types: [opened, edited]

jobs:
  read-issue-body:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get issue body as JSON string with prefix
      id: get_issue
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          });
          const prefixed = `Implement this user story:\n\n${issue.data.body}`;
          const jsonSafeBody = JSON.stringify(prefixed);
          core.setOutput("body", jsonSafeBody);
    

    - name: Call Azure OpenAI API
      run: |
        curl -X POST "https://malmi-maeexi1k-eastus2.cognitiveservices.azure.com/openai/deployments/o4-mini/chat/completions?api-version=2024-12-01-preview" \
          -H "Content-Type: application/json" \
          -H "api-key: ${{ secrets.AZURE_OPENAI_API_KEY }}" \
          -d '{
            "messages": [{"role": "user", "content": ${{ steps.get_issue.outputs.body }}}],
            "temperature": 0.7,
            "max_tokens": 100
          }' > response.json
    

    - name: Parse and write files
      run: |
       mkdir -p src
       jq -r '.choices[0].message.content' response.json | awk '
       BEGIN {file=""}
       /^- / {file=substr($0,3); next}
       file {print > file}
       '
          
    - name: LS
      run: |
        ls -la
        cat response.json
        ls -la src